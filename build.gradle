plugins {
	id 'org.springframework.boot' version '3.1.4'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'java'
	id 'org.sonarqube' version '3.3'
	id 'org.openapi.generator' version '6.4.0'
	id 'org.liquibase.gradle' version '2.2.1'
}

repositories {
    mavenCentral()
    gradlePluginPortal()
    maven {
        url = uri('https://plugins.gradle.org/m2/')
    }
}

group = 'org.ronald.mc.service.fleet'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.batch:spring-batch-infrastructure:5.1.0'
	implementation 'mysql:mysql-connector-java:8.0.33'

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.3'
	implementation 'org.openapitools:openapi-generator-gradle-plugin:6.4.0'
	implementation 'org.modelmapper:modelmapper:3.0.0'

	implementation 'org.liquibase:liquibase-core:4.26.0'
	liquibaseRuntime 'info.picocli:picocli:4.6.1'

	compileOnly 'org.projectlombok:lombok:1.18.26'
	annotationProcessor 'org.projectlombok:lombok:1.18.26'

	testImplementation 'junit:junit:4.13.1'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mockito:mockito-core:5.10.0'
	testImplementation 'com.h2database:h2:2.2.224'
}

compileJava.dependsOn tasks.openApiGenerate

openApiGenerate {
	generatorName = "spring"
	inputSpec = "$projectDir/src/main/resources/openapi/openapi-spec.yaml"
	outputDir = "$projectDir/generated"
	apiPackage = "org.ronald.mc.service.fleet.generated"
	modelPackage = "org.ronald.mc.service.fleet.generated.dto"
	configOptions = [
			interfaceOnly       : "true",
			openApiNullable     : "false",
			skipDefaultInterface: "true",
			useSpringBoot3: "true"
	]
	globalProperties = [
			apis  : "",
			models: ""
	]
	cleanupOutput = true
}


sourceSets {
	sourceSets {
		main {
			java {
				srcDirs 'src/main/java', 'generated/src/main/java'
			}
		}
	}

	test {
		java {
			srcDirs 'src/test/java'
		}
	}
}
